CREATE TABLE Admin (
	id INT AUTO_INCREMENT NOT NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(64) NOT NULL, 
	PRIMARY KEY (id),
	UNIQUE KEY (email)
);

CREATE TABLE Visitor (
	id INT AUTO_INCREMENT NOT NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(64) NOT NULL,
	card_number CHAR(16) NOT NULL,
	exp_month TINYINT NOT NULL,
	exp_year SMALLINT NOT NULL,
	security_number VARCHAR(4) NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY (email)
);

CREATE TABLE Museum (
	id INT AUTO_INCREMENT NOT NULL,
	name VARCHAR(256) NOT NULL,
	curator_id INT,
	PRIMARY KEY (id),
	UNIQUE KEY (name),
	FOREIGN KEY (curator_id) REFERENCES Visitor(id) ON DELETE SET NULL
);

CREATE TABLE CuratorRequest (
	id INT AUTO_INCREMENT NOT NULL,
	visitor_id INT NOT NULL,
	museum_id INT NOT NULL,
	admin_id INT NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY (visitor_id, museum_id),
	FOREIGN KEY (visitor_id) REFERENCES Visitor(id) ON DELETE CASCADE,
	FOREIGN KEY (museum_id) REFERENCES Museum(id),
	FOREIGN KEY (admin_id) REFERENCES Admin(id)
);



CREATE TABLE Review (
	id INT AUTO_INCREMENT NOT NULL,
	visitor_id INT NOT NULL,
	museum_id INT NOT NULL,
	comment TEXT,
	rating TINYINT NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY (visitor_id, museum_id),
	FOREIGN KEY (visitor_id) REFERENCES Visitor(id) ON DELETE CASCADE,
	FOREIGN KEY (museum_id) REFERENCES Museum(id)
);

CREATE TABLE Ticket (
	id INT AUTO_INCREMENT NOT NULL,
	museum_id INT NOT NULL,
	price DOUBLE,
	purchase_timestamp DATETIME,
	visitor_id INT NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY(museum_id, visitor_id),
	FOREIGN KEY (museum_id) REFERENCES Museum(id),
	FOREIGN KEY (visitor_id) REFERENCES Visitor(id) ON DELETE CASCADE
);

CREATE TABLE Exhibit (
	id INT AUTO_INCREMENT NOT NULL,
	museum_id INT NOT NULL,
	name VARCHAR(256) NOT NULL,
	year SMALLINT NOT NULL,
	url VARCHAR(256) NOT NULL,
	PRIMARY KEY (id),
	UNIQUE KEY (museum_id, name),
	FOREIGN KEY (museum_id) REFERENCES Museum(id)
);

